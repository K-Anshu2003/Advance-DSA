class Solution {
    public TreeNode balanceBST(TreeNode root) {
        ArrayList<Integer> li = new ArrayList<>();
        inorder(root, li);
        
        int left = 0;
        int right = li.size()-1;
        TreeNode r = Construct(li, left, right);
        return r; 
    }

    public void inorder(TreeNode root, ArrayList<Integer> li){
        if(root == null) return;
        
        inorder(root.left, li);
        li.add(root.val);
        inorder(root.right, li);
    }

    public TreeNode Construct(ArrayList<Integer> li, int left, int right){
        
        if (left > right) {
            return null;  // Base case: no nodes to create
        }
        
        int mid = left+(right-left) / 2;
        
        TreeNode r = new TreeNode(li.get(mid));
        
        r.left = Construct(li, left, mid-1);
        r.right = Construct(li, mid+1, right);
        
        return r;
    }
    
}

class Solution {
    public TreeNode deleteNode(TreeNode root, int key) {

        if (root == null) return null;
        
        if(root.val < key){
            root.right = deleteNode(root.right, key);
        }else if(root.val > key){
            root.left = deleteNode(root.left, key);
        }
        else{
            //case1: for leaf nodes
            if(root.left == null && root.right == null) return null;
            
            //case2: for node having single child
            if(root.left == null){
                return root.right;
            }else if(root.right == null){
                return root.left;
            }

            //case3: for node having two child
            TreeNode inOrderSuccessor = findInorderSuccessor(root.right);
            root.val = inOrderSuccessor.val;
            root.right = deleteNode(root.right, inOrderSuccessor.val);
        }
        return root;  
    }

    public TreeNode findInorderSuccessor(TreeNode root){
        while(root.left != null){
            root = root.left;
        }
        return root;
    }
}

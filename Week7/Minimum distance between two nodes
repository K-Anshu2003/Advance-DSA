// combining two code into one to calculate the min distance b/w two nodes

class GfG {
    int findDist(Node root, int a, int b) {
        // Your code here
        
        Node lca = lowestCommonAncestor(root, a, b);
        int dist1 = distance(lca, a);
        int dist2 = distance(lca, b);
        
        return dist1 + dist2;
    }
    // finding distance b/w any node and root node
    public int distance(Node root, int n){
        
        if(root == null) return -1;
        
        if(root.data == n) return 0;
        
        int leftdis = distance(root.left, n);
        int rightdis = distance(root.right, n);
        
        if(leftdis == -1 && rightdis == -1){
            return -1;
        }
        else if(leftdis == -1){
            return rightdis+1;
        }
        else{
            return leftdis+1;
        }
    }

// finding the lowest commonn ancestor of both nodes-------
    public Node lowestCommonAncestor(Node root, int a, int b){
        if(root == null || root.data == a || root.data == b){
            return root;
        }
        
        Node left = lowestCommonAncestor(root.left, a, b);
        Node right = lowestCommonAncestor(root.right, a, b);
        
        
        if(left == null) return right;
        if(right == null) return left;
        
        return root;
    }
}

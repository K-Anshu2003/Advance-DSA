class Solution {
    
    static List<Integer> firstNegInt(int arr[], int k){
        int n=arr.length;
        List<Integer> li = new ArrayList<>();
        Queue<Integer> q = new LinkedList<>();
        int i=0, j=0;
        
        while(j<arr.length){
            if(arr[j] < 0){
                q.offer(arr[j]);
            }
            
            if(j-i+1 < k) j++;
            else if(j-i+1 == k){
                if(!q.isEmpty()){
                    li.add(q.peek());
                }else{
                    li.add(0);
                }
                
                if(!q.isEmpty() && arr[i] == q.peek()){
                    q.poll();
                }
                
                i++;
                j++;
            }
        }
        return li;
    }
    
    static List<Integer> firstNegInt1(int arr[], int k) {
        // write code here
        int n = arr.length;
        
        List<Integer> li = new ArrayList<>();
        
        for(int i=0; i<n-k+1; i++){
            int neg = 0;
            for(int j=i; j<k+i; j++){
                if(arr[j] < 0){
                    neg = arr[j];
                    break;
                }
            }
            li.add(neg);
        }
        return li;
    }
}

//optimal approach
//sliding window

class Solution {

    int search(String pat, String txt) {
        
        int patFreq[] = new int[26];
        int k = pat.length();
        int n = txt.length();
        
        //claculate patttrn frequency
        for(int i=0; i<k; i++){
            int index = pat.charAt(i)-97;
            patFreq[index]++;
        }
        
        //initializing window of size equals to pattrn's size
        int txtFreq[] = new int[26];
        for(int i=0; i<k; i++){
            int index = txt.charAt(i)-97;
            txtFreq[index]++;
        }
        int count = 0;
        if(Arrays.equals(txtFreq,patFreq)){
            count++;
            
        }
        
        
        //calculation for next windows by sliding the window by one index;
        for(int i=1; i<n-k+1; i++){
            
            int RemovedCharIndex = txt.charAt(i-1)-97;
            int addedCharIndex = txt.charAt(i+k-1)-97;
            
            txtFreq[addedCharIndex]++;
            txtFreq[RemovedCharIndex]--;
            
            if(Arrays.equals(txtFreq,patFreq)){
                count++;
            }
        }
        return count;
    }
}

//brute force approach

public class AnagramCounter {
    // Helper method to check if two strings are anagrams
    private static boolean areAnagrams(String s1, String s2) {
        if (s1.length() != s2.length()) return false;

        int[] freq = new int[26]; // Assuming lowercase letters only

        for (int i = 0; i < s1.length(); i++) {
            freq[s1.charAt(i) - 'a']++;
            freq[s2.charAt(i) - 'a']--;
        }

        for (int count : freq) {
            if (count != 0) return false;
        }

        return true;
    }

    // Main method to count anagram occurrences
    public static int countAnagrams(String text, String pattern) {
        int count = 0;
        int len = pattern.length();

        for (int i = 0; i <= text.length() - len; i++) {
            String sub = text.substring(i, i + len);
            if (areAnagrams(sub, pattern)) {
                count++;
            }
        }

        return count;
    }

    public static void main(String[] args) {
        String text = "forxxorfxdofr";
        String pattern = "for";
        System.out.println("Anagram count: " + countAnagrams(text, pattern)); // Output: 3
    }
}

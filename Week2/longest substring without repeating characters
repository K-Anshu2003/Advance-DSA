//optimal approach
class Solution {
    public int lengthOfLongestSubstring(String s) {

        HashSet<Character> set = new HashSet<>();
        int maxlen = 0;
        int left=0;
        for(int right=0; right<s.length(); right++){
            while (set.contains(s.charAt(right))) {
                set.remove(s.charAt(left));
                left++;
            }
            set.add(s.charAt(right));
            maxlen = Math.max(maxlen, right-left+1);
        } 
        return maxlen;
    }
}


//brute force approach

class Solution {
    public int lengthOfLongestSubstring(String s) {

        int maxlength = 0;
        for(int i=0; i<s.length(); i++){
            HashSet<Character> set = new HashSet<>();
            int length = 0;
            for(int j=i; j<s.length(); j++){
                char ch = s.charAt(j);
                if(!set.contains(ch)){
                    set.add(ch);
                    length++;
                }else{
                    break;
                }
            }
            maxlength = Math.max(maxlength, length);
        }
        return maxlength;   
    }
}

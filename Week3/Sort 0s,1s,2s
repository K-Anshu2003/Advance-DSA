class Solution {
    public void sort012(int[] arr) {
        int low = 0;
        int mid = 0;
        int high = arr.length - 1;
        
        while (mid <= high) {
            
            // Current element is a 0
            if (arr[mid] == 0) {
                // Swap the 0 at mid with the element at low
                swap(arr, low, mid);
                // Move both low and mid pointers forward
                low++;
                mid++;
            } 
            // Current element is a 1
            else if (arr[mid] == 1) {
                // The 1 is already in its correct position, just move on
                mid++;
            } 
            // Current element is a 2
            else {
                // Swap the 2 at mid with the element at high
                swap(arr, mid, high);
                // The element that was at high needs to be re-evaluated, so don't increment mid
                // Just decrement the high pointer
                high--;
            }
        }
    }

    private void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}
